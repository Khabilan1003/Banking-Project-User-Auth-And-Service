package com.banking.oracle.dao.user;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.banking.oracle.config.DatabaseConfig;

public class UserDAOImplementation implements UserDAO {
	Connection conn;

	public UserDAOImplementation() {
		conn = DatabaseConfig.getConnection();
	}

	@Override
	public boolean create(User user) {
		try {
			String sql = "INSERT INTO `user` ("
					+ "`firstname` , `lastname` , `username` , `password` , `branchCode` , `phoneNumber` , `email`) "
					+ "VALUES (?,?,?,?,?,?,?)";
			PreparedStatement pst = conn.prepareStatement(sql);

			pst.setString(1, user.getFirstname());
			pst.setString(2, user.getLastname());
			pst.setString(3, user.getUsername());
			pst.setString(4, user.getPassword());
			pst.setInt(5, user.getBranchCode());
			pst.setString(6, user.getFirstname());
			pst.setString(7, user.getFirstname());
		} catch (SQLException e) {
			e.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	@Override
	public User get(Integer userId) {
		User user = null;
		try {
			Statement statement = conn.createStatement();
			ResultSet result = statement.executeQuery("SELECT * FROM user WHERE userId = " + userId);
			if (result.next()) {
				user = new User(result.getInt(1), result.getString(2), result.getString(3), result.getString(4),
						result.getString(5), result.getInt(6), result.getString(7), result.getString(8));
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		}

		return user;
	}

	@Override
	public User get(String username) {
		User user = null;
		try {
			Statement statement = conn.createStatement();
			ResultSet result = statement.executeQuery("SELECT * FROM user WHERE username = " + username);
			if (result.next()) {
				user = new User(result.getInt(1), result.getString(2), result.getString(3), result.getString(4),
						result.getString(5), result.getInt(6), result.getString(7), result.getString(8));
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		}

		return user;
	}

	@Override
	public List<User> getAll() {
		List<User> users = new ArrayList<>();
		try {
			Statement statement = conn.createStatement();
			ResultSet result = statement.executeQuery("SELECT * FROM user");
			while (result.next()) {
				users.add(new User(result.getInt(1), result.getString(2), result.getString(3), result.getString(4),
						result.getString(5), result.getInt(6), result.getString(7), result.getString(8)));
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		}

		return users;
	}

	@Override
	public boolean update(User user) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean deleteById(Integer userId) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public List<User> getByBranchCode(Integer branchCode) {
		List<User> users = new ArrayList<>();
		try {
			Statement statement = conn.createStatement();
			ResultSet result = statement.executeQuery("SELECT * FROM user where branchCode = " + branchCode);
			while (result.next()) {
				users.add(new User(result.getInt(1), result.getString(2), result.getString(3), result.getString(4),
						result.getString(5), result.getInt(6), result.getString(7), result.getString(8)));
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		}

		return users;
	}
}
